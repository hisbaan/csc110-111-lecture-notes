#+title: CSC236 Week 01: Introduction and Basic Induction
#+date: September 9 -- 15, 2021
#+author: Hisbaan Noorani
#+setupfile: setup.org

* Why reason about computing

- You're not just hackers anymore

  Sometimes you need to analyze code before it runs. Sometimes it should never be run!

- Can you test everything?

  Infinitely many inputs: integers, strings, lists.

- Careful, you might get to like it...(?!*)

* How to reason about computing

- It's messy...

  interesting problems fight back.

  You need to draft, re-draft, and re-re-draft.

  You need to follow blind alleys until you find a solution.

  You can also find a solution that isn't wrong, but could be better.

- It's art...

  Strive for correctness, clarity, surprise, humor, pathos, and others.

* How to do well in this course

- read the syllabus as a two-way promise

- question, answer, record, synthesize

  try annotating blank slides.

- collaborate with respect

  You need computer science friends who are respectful and constructively critical.

* Assume that you already know

- Chapter 0 material from /Introduction to Theory of Computation/.
- CSC110/111 material, especially proofs and big-\(\bigo\).

* By December you'll know

- understand and use several flavours of induction.

  some of these flavours will taste new

- Formal languages, regular languages,regular expressions

  Sets of strings

- complexity and correctness of programs --- both recursive and iterative

* domino fates foretold

\[\sbr{P(0) \land \br{\forall n \in \N, P(n) \implies P(n + 1)}} \implies \forall n \in \N, P(n)\]

If the initial case works, and each case that works implies its successor works, then all cases work

* Simple induction outline

- inductive step: introduce \(n\) and inductive hypothesis \(H(n)\)
  + derive conclusion \(C(n)\): show that \(C(n)\) follows from \(H(n)\), indicating *where* you use \(H(n)\) and why that is valid.
- Verify base case(s): verify that the claim is true for any cases not covered in the inductie step
- In simple induction \(C(n)\) is just \(H(n + 1)\)

* Trominoes

See https://en.wikipedia.org/wiki/Tromino

#+attr_latex: :width 200px
[[file:img/trominoes.png]]

Can an \(n \times n\) square grid, with one subsquare removed, be tiled (covered withotu overlapping) by "chair" trominoes?

- \(1 \times 1\): Yes.
- \(2 \times 2\): Yes.
- \(3 \times 3\): No. The remaining number of squares is not divisible by 3.
- \(4 \times 4\): Yes.


/Proof:/ \(\forall n \in \N\), define the predicate \(P(n)\) as a \(2^{n} \times 2^{n}\) square grid, with one subsquare removed, can be tiled (covered without overlapping) by "chair" trominoes.

\begin{itemize}
  \item
        Induction on \(n\)

        Let \(n\) be an arbitrary, fixed, natural number. (Let \(n \in \N\)).

        Assume \(P(n)\), that is a \(2^n \times 2^n\) grid, with one square removed can be tiled with "chairs."

        I will prove \(P(n + 1)\), that is a \(2^{n + 1} \times 2^{n + 1}\) grid, with one square removed can be tiled by chairs.

        Let \(G\) be a \(2^{n + 1} \times 2^{n + 1}\) grid with one square removed. Notice that \(G\) can be decomposed into four \(2^{n} \times 2^{n}\) disjoint quadrant grids. We may assyme, WLOG (wihout loss of generality) that the missing square is in the upper-right quadrant, since otherwise just rotate it there, and rotate back when done. By \(P(n)\) I can tile the upper-right quadrant, minus the missing square. By \(P(n)\) 3 more times, I can tile the remaining 3 quadrants, omitting for a moment the 3 tiles nearest the centre of \(G\), with chairs. The briefly omitted squares form a chair! So I complete the tiling by adding one more chair. Thus \(P(n + 1)\).

  \item
        Base Case

        A \(2^{0} \times 2^{0}\) grid, with one square removed, is just empty space! This can be tiled with 0 charis. So \(P(0)\) is true.
\end{itemize}

And thus \(\forall n \in \N, P(n)\). \orgqed

* \(3^{n} \geq n^{3}\)?

** Scratch Work

Check for a few values of \(n\):
\begin{align*}
3^0 = 1 &\geq 0 = 0^3 && \checkmark \\
3^1 = 3 &\geq 1 = 1^3 && \checkmark \\
3^2 = 9 &\geq 8 = 2^3 && \checkmark \\
3^3 = 27 &\geq 27 = 3^3 && \checkmark \\
3^4 = 81 &\geq 64 = 4^3 && \checkmark \\
3^{-1} = \frac{1}{3} &\geq -1 = -1^3 && \checkmark \\
3^{2.5} &< 2.5^3 && \times
\end{align*}

** Simple Induction

/Proof:/ \(\forall n \in \N\), define the predicate \(P(n)\) as \(3^n \geq n^3\).

  \begin{itemize}
    \item Induction on \(n\)

          Let \(n \in \N\). Assume \(H(n)~:~3^{n} \geq n^{3}\). I will prove \(H(n + 1)\) follows, that is \(3^{n + 1} \geq \br{n + 1}^{3}\).

          \begin{align*}
            &~3^{n + 1} \\
            =&~ 3 \cdot 3^{n} \\
            \geq&~ 3 \cdot n^{3} \\
            =&~ n^{3} + n^{3} + n^{3} \\
            \geq&~ n^{3} + 3n^{2} + 9n && \text{(since \(n \geq 3\))} \\
            \geq&~ n^{3} + 3n^{2} + 3n + 6n \\
            =&~ n^{3} + 3n^{2} + 3n + 1 && \text{(since \(6n \geq 1\))} \\
            =&~ \br{n + 1}^{3}  \\
          \end{align*}

          And thus we have shown that \(\forall n \in \N \st n \geq 3, H(n) \implies H(n + 1)\).

    \item Base Case

          \begin{flalign} \nonumber
            &\begin{aligned}
              3^{3} &\geq 3^{3} \text{ so } P(3) \text{ holds.} \\
              3^{2} &\geq 2^{3} \text{ so } P(2) \text{ holds.} \\
              3^{1} &\geq 1^{3} \text{ so } P(1) \text{ holds.} \\
              3^{0} &\geq 0^{3} \text{ so } P(0) \text{ holds.} \\
            \end{aligned} &&
          \end{flalign}
  \end{itemize}

  And thus, we have shown \(\forall n \in \N, 3^{n} \geq n^{3}\), as needed. \orgqed
